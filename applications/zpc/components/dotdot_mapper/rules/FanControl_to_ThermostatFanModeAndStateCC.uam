// Z-Wave attributes
// Fan mode 
def zwTHERMOSTAT_FAN_MODE_CURRENT_FAN_MODE 0x4402
def zwTHERMOSTAT_FAN_MODE_SUPPORTED_FAN_MODE 0x4403
def zwTHERMOSTAT_FAN_MODE_OFF_FLAG 0x4404

// Fan state
def zwTHERMOSTAT_FAN_STATE 0x4502

// ZCL clusters
// Custom cluter
def zbZWAVE_FAN_MODE 0xFD140001
def zbZWAVE_SUPPORTED_FAN_MODE 0xFD140002
def zbZWAVE_FAN_STATE 0xFD140003
// Standard cluster
def zbFAN_MODE 0x02020000

// Enums
// Z-Wave
def UNIFY_FAN_MODE_AUTO 0x00
def UNIFY_FAN_MODE_LOW 0x01
def UNIFY_FAN_MODE_AUTO_HIGH 0x02
def UNIFY_FAN_MODE_HIGH 0x03
def UNIFY_FAN_MODE_AUTO_MEDIUM 0x04
def UNIFY_FAN_MODE_MEDIUM 0x05
def UNIFY_FAN_MODE_CIRCULATION 0x06
def UNIFY_FAN_MODE_HUMIDITY_CIRCULATION 0x07
def UNIFY_FAN_MODE_LEFT_RIGHT 0x08
def UNIFY_FAN_MODE_UP_DOWN 0x09
def UNIFY_FAN_MODE_QUIET 0x0A
def UNIFY_FAN_MODE_EXTERNAL_CIRCULATION 0x0B
// ZCL
def ZCL_FAN_MODE_OFF 0x00
def ZCL_FAN_MODE_LOW 0x01
def ZCL_FAN_MODE_MEDIUM 0x02
def ZCL_FAN_MODE_HIGH 0x03
def ZCL_FAN_MODE_ON 0x04
def ZCL_FAN_MODE_AUTO 0x05
def ZCL_FAN_MODE_SMART 0x06


def zwave_no_thermostat_fan_mode (e'zwTHERMOSTAT_FAN_MODE_CURRENT_FAN_MODE == 0)

// Unify Fan mode (ZWave) <-> FanMode cluster
scope 20 chain_reaction(0) {
  r'zbZWAVE_FAN_MODE =
    if (zwave_no_thermostat_fan_mode) undefined
    if (r'zbFAN_MODE == ZCL_FAN_MODE_AUTO) UNIFY_FAN_MODE_AUTO
    if (r'zbFAN_MODE == ZCL_FAN_MODE_LOW) UNIFY_FAN_MODE_LOW
    if (r'zbFAN_MODE == ZCL_FAN_MODE_MEDIUM) UNIFY_FAN_MODE_MEDIUM
    undefined
  d'zbZWAVE_FAN_MODE =
    if (zwave_no_thermostat_fan_mode) undefined
    if (d'zbFAN_MODE == ZCL_FAN_MODE_AUTO) UNIFY_FAN_MODE_AUTO
    if (d'zbFAN_MODE == ZCL_FAN_MODE_LOW) UNIFY_FAN_MODE_LOW
    if (d'zbFAN_MODE == ZCL_FAN_MODE_MEDIUM) UNIFY_FAN_MODE_MEDIUM
    undefined

   r'zwTHERMOSTAT_FAN_MODE_OFF_FLAG =
      if (zwave_no_thermostat_fan_mode) undefined
      if (r'zbFAN_MODE == ZCL_FAN_MODE_OFF) 1
      0
   d'zwTHERMOSTAT_FAN_MODE_OFF_FLAG =
      if (zwave_no_thermostat_fan_mode) undefined
      if (d'zbFAN_MODE == ZCL_FAN_MODE_OFF) 1
      0

  // Linking attributes zigbee -> zwave
  r'zbFAN_MODE = 
    if (zwave_no_thermostat_fan_mode) undefined
    if (r'zbZWAVE_FAN_MODE == UNIFY_FAN_MODE_AUTO) ZCL_FAN_MODE_AUTO
    if (r'zbZWAVE_FAN_MODE == UNIFY_FAN_MODE_LOW) ZCL_FAN_MODE_LOW
    if (r'zbZWAVE_FAN_MODE == UNIFY_FAN_MODE_AUTO_HIGH) ZCL_FAN_MODE_HIGH
    if (r'zbZWAVE_FAN_MODE == UNIFY_FAN_MODE_HIGH) ZCL_FAN_MODE_HIGH
    if (r'zbZWAVE_FAN_MODE == UNIFY_FAN_MODE_AUTO_MEDIUM) ZCL_FAN_MODE_MEDIUM
    if (r'zbZWAVE_FAN_MODE == UNIFY_FAN_MODE_MEDIUM) ZCL_FAN_MODE_MEDIUM
    if (r'zwTHERMOSTAT_FAN_MODE_OFF_FLAG == 1) ZCL_FAN_MODE_OFF
    if (r'zwTHERMOSTAT_FAN_MODE_OFF_FLAG == 0) ZCL_FAN_MODE_ON
    undefined

  // Linking attributes zigbee -> zwave
  d'zbFAN_MODE = 
    if (zwave_no_thermostat_fan_mode) undefined
    if (d'zbZWAVE_FAN_MODE == UNIFY_FAN_MODE_AUTO) ZCL_FAN_MODE_AUTO
    if (d'zbZWAVE_FAN_MODE == UNIFY_FAN_MODE_LOW) ZCL_FAN_MODE_LOW
    if (d'zbZWAVE_FAN_MODE == UNIFY_FAN_MODE_AUTO_HIGH) ZCL_FAN_MODE_HIGH
    if (d'zbZWAVE_FAN_MODE == UNIFY_FAN_MODE_HIGH) ZCL_FAN_MODE_HIGH
    if (d'zbZWAVE_FAN_MODE == UNIFY_FAN_MODE_AUTO_MEDIUM) ZCL_FAN_MODE_MEDIUM
    if (d'zbZWAVE_FAN_MODE == UNIFY_FAN_MODE_MEDIUM) ZCL_FAN_MODE_MEDIUM
    if (d'zwTHERMOSTAT_FAN_MODE_OFF_FLAG == 1) ZCL_FAN_MODE_OFF
    if (d'zwTHERMOSTAT_FAN_MODE_OFF_FLAG == 0) ZCL_FAN_MODE_ON
    undefined
}

// Unify Fan mode (ZWave) <-> Attribute Store
scope 25 chain_reaction(0) {
  // Linking attributes zwave -> zigbee
  r'zbZWAVE_FAN_MODE =
    if (zwave_no_thermostat_fan_mode) undefined
     r'zwTHERMOSTAT_FAN_MODE_CURRENT_FAN_MODE
  d'zbZWAVE_FAN_MODE =
    if (zwave_no_thermostat_fan_mode) undefined
     d'zwTHERMOSTAT_FAN_MODE_CURRENT_FAN_MODE
  

  // Linking attributes zigbee -> zwave
  r'zwTHERMOSTAT_FAN_MODE_CURRENT_FAN_MODE = 
    if (zwave_no_thermostat_fan_mode) undefined
    r'zbZWAVE_FAN_MODE
  d'zwTHERMOSTAT_FAN_MODE_CURRENT_FAN_MODE = 
    if (zwave_no_thermostat_fan_mode) undefined
    d'zbZWAVE_FAN_MODE

  // Supported fan mode (read only)
  r'zbZWAVE_SUPPORTED_FAN_MODE = 
      if (zwave_no_thermostat_fan_mode) undefined
      r'zwTHERMOSTAT_FAN_MODE_SUPPORTED_FAN_MODE

  // Supported state(read only)
  r'zbZWAVE_FAN_STATE = 
      if (zwave_no_thermostat_fan_mode) undefined
      r'zwTHERMOSTAT_FAN_STATE
}